#! /usr/bin/env python3
"""OpenVPN key management utility

Usage:
    vpnkeymgr generate <vars> [--name=<name>] [options]
    vpnkeymgr package <name> [--out=<file>] [options]
    vpnkeymgr syncpkg <names>... [--host=<host>] [--path=<path>] \
[--user=<user>] [--identity=<identity>] [options]

Options:
    --basedir=<basedir>  Specifies the base directory to use
"""

from logging import INFO, getLogger, basicConfig
from tempfile import NamedTemporaryFile
from docopt import docopt
from os import getcwd
from os.path import basename

from vpnkeymgr.generator import Keygen
from vpnkeymgr.packager import ClientPackager
from vpnkeymgr.syncer import Syncer


if __name__ == '__main__':
    basicConfig(level=INFO)
    logger = getLogger(basename(__file__))

    options = docopt(__doc__)
    basedir = options['--basedir'] or getcwd()

    if options['generate']:
        vars_ = options['<vars>']
        name = options['--name']
        keygen = Keygen(basedir, vars_)
        key = keygen.genkey(name=name)

        if key:
            logger.info('Generated key: {}'.format(key))
            exit(0)
        else:
            logger.error('Failed to generate key')
            exit(1)
    elif options['package']:
        name = options['<name>']
        fname = options['--out']
        packager = ClientPackager(basedir)
        tarball = packager.package(name)

        if tarball:
            if fname:
                with open(fname, 'wb') as f:
                    f.write(tarball)
            else:
                with NamedTemporaryFile(
                        mode='wb',
                        suffix='.tar',
                        delete=False) as tmp:
                    tmp.write(tarball)
                    fname = tmp.name

            logger.info('Wrote tarball to: {}'.format(fname))
            exit(0)
        else:
            logger.error('Could not create tarball')
            exit(2)
    elif options['syncpkg']:
        clients = options['<names>']
        host = options['--host']
        path = options['--path']
        user = options['--user']
        identity = options['--identity']

        syncer = Syncer(basedir, *clients)

        if syncer.sync(host=host, path=path, user=user, identity=identity):
            exit(0)
        else:
            exit(3)
    else:
        logger.error('W00t teh shizzle?')
        exit(4)
